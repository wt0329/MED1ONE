package kr.or.ddit.employee.controller;

import javax.inject.Inject;

import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.BindingResult;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PatchMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;

import kr.or.ddit.common.controller.ServiceResult;
import kr.or.ddit.employee.service.EmployeeService;
import kr.or.ddit.employee.vo.EmployeeVO;
import kr.or.ddit.validate.groups.UpdateGroup;

@Controller
@RequestMapping("/employee/empUpdate.do")
public class empUpdateController {
	
	@Inject
	private EmployeeService service;
	
	//한 사람의 정보만 필요
	@GetMapping
	public String getHandler(
		Model model
		, @RequestParam(defaultValue = "DPM0001") String empNo // 로그인 완성되면 권한으로 바꿔야댐
	) {
		EmployeeVO emp = service.retrieveEmployee("DPM0001");
		model.addAttribute("employee", emp);
		return "mypage/mypageForm";
	}

	@PatchMapping
	public String postHandler(
		Model model
		, @Validated(UpdateGroup.class) @ModelAttribute("employee") EmployeeVO employee
		,BindingResult errors
	) {
		employee.setEmpNo("DPM0001");
		String logicalViewName = null;
		
		if(!errors.hasErrors()) {
			ServiceResult result = service.modifyEmp(employee);
			switch(result) {
			case INVALIDPASSWORD:
				model.addAttribute("message", "비밀번호 오류");
				logicalViewName = "mypage/mypageForm";
				break;
			case OK:
				logicalViewName = "redirect:/mypage";
				break;
			default:
				model.addAttribute("message", "서버 오류, 잠시 뒤 다시 시도하시오.");
				logicalViewName = "mypage/mypageForm";
				break;
			}
		}else {
			logicalViewName = "mypage/mypageForm";
		}
			return logicalViewName;
	}
}
