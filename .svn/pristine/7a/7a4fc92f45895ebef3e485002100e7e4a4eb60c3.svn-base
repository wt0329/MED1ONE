package kr.or.ddit.notice.service;

import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import javax.inject.Inject;

import org.springframework.beans.factory.annotation.Value;
import org.springframework.core.io.Resource;
import org.springframework.stereotype.Service;
import org.springframework.web.multipart.MultipartFile;

import kr.or.ddit.File.service.AtchFileService;
import kr.or.ddit.File.vo.AtchFileDtlVO;
import kr.or.ddit.File.vo.AtchFileVO;
import kr.or.ddit.employee.vo.PaginationInfo;
import kr.or.ddit.notice.dao.NoticeDao;
import kr.or.ddit.notice.vo.NoticeBoardVO;

@Service
public class NoticeServiceImpl implements NoticeService {

	@Inject
	private NoticeDao noticeDao;
	
	@Inject
	private AtchFileService atchService;
	@Value("#{appInfo.atchPath}")
	private Resource atchPath;
	

	private void processAtchFileGroup(NoticeBoardVO board) {
		MultipartFile[] boardFiles = board.getBoFiles();
		if (boardFiles == null)
			return; // 아예파일이 없을때

		List<AtchFileDtlVO> detailList = new ArrayList<>();
		for (MultipartFile boardFile : boardFiles) {
			if (boardFile.isEmpty())
				continue;
			detailList.add(new AtchFileDtlVO());
		}

		if (detailList.size() > 0) {
			AtchFileVO fileGroup = new AtchFileVO();
			fileGroup.setDetailList(detailList);

			try {
				// 1. 첨부파일의 메타 데이터 저저ㅏㅇ
				// 2. 첨부파일의 2진 데이터 저장
				int atchFileId = atchService.createAtchFileGroup(fileGroup, atchPath);
				board.setAtchFileId(atchFileId);
			} catch (IOException e) {
				// 첨부파일을 작성하다 실패
				throw new RuntimeException(e);
			}
		}
	}
	
	@Override
	public boolean createBoard(NoticeBoardVO board) {
		return noticeDao.insertBoard(board) > 0;
	}
	
	@Override
	public List<NoticeBoardVO> retriebeBoardList(PaginationInfo<NoticeBoardVO> paging) {
		long totalRecord = noticeDao.selectTotalRecord(paging);
		paging.setTotalRecord(totalRecord);
		return noticeDao.selectBoardList(paging);
	}

	@Override
	public NoticeBoardVO retriebeBoard(String noticeCode) {
		
		return noticeDao.selectBoard(noticeCode);
	}

	@Override
	public boolean modifyBoard(NoticeBoardVO board) {
	    return noticeDao.updateBoard(board) > 0;
	}

	@Override
	public boolean removeBoard(String boardCode) {
		return noticeDao.deleteBoard(boardCode) > 0;
	}

}
