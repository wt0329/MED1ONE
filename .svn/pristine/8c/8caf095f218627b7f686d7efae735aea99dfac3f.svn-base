package kr.or.ddit.notice.controller;

import javax.inject.Inject;

import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.BindingResult;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.SessionAttributes;

import kr.or.ddit.notice.service.NoticeService;
import kr.or.ddit.notice.vo.NoticeBoardVO;
import kr.or.ddit.validate.groups.InsertGroup;
import lombok.RequiredArgsConstructor;

@RequiredArgsConstructor
@Controller
@RequestMapping("/notice/")
public class NoticeUpdateController {

	private final NoticeService service;

	// 공지사항 게시물 등록
	
	@GetMapping("noticeInsert.do") // 뷰를 보여주는
	public String noticeForm() {
		return "notice/noticeForm";
	}
	
	@PostMapping("noticeInsert.do") // 뷰로 보는걸 입력하는? 
	public String noticeInsert(@Validated(InsertGroup.class) @ModelAttribute("noticeboard") NoticeBoardVO board,
			BindingResult errors, Model model) {
		String viewName = null;

		if (!errors.hasErrors()) {
			boolean success = service.createBoard(board);
			if (success) {
				viewName = "redirect:/notice/noticeView.do?what=" + board.getNoticeCode();
			} else {
				model.addAttribute("message", "새글 작성중 문제 발생");
				viewName = "notice/noticeForm";
			}
		} else {
			viewName = "notice/noticeForm";
		}
		return viewName;
	}


	// 공지사항 수정
	@GetMapping("noticeUpdate.do")
	public String updatePorm() {
		return "notice/noticeForm";
	}
	
	// 마저해야함!
	@PostMapping("noticeUpdate.do")
	public String noticeUpdate() {
		return "notice/noticeForm";
	}

	
	// 공지사항 삭제
	@GetMapping("noticeDelete.do")
	public String noticeDelete() {
		return "notice/noticeDetail";
	}
}
