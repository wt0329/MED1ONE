<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.or.ddit.Free.dao.FreeDao">

	<sql id="searchFrag">
	<where>
			<if	test="simpleCondition neq null and simpleCondition.searchWord neq null and not simpleCondition.searchWord.isEmpty()">
				<choose>
					<when test="simpleCondition.searchType eq 'writer'">
						INSTR(BOARD_WRTR, #{simpleCondition.searchWord}) > 0
					</when>
					<when test="simpleCondition.searchType eq 'title'">
						INSTR(BOARD_TITLE, #{simpleCondition.searchWord}) > 0
					</when>
					<when test="simpleCondition.searchType eq 'content'">
						INSTR(BOARD_CONTENT, #{simpleCondition.searchWord}) > 0
					</when>
					<otherwise> <!-- 전체옵션을 줬을 때 -->
						INSTR(BOARD_WRTR, #{simpleCondition.searchWord}) > 0
						OR
						INSTR(BOARD_TITLE, #{simpleCondition.searchWord}) > 0
						OR
						INSTR(BOARD_CONTENT, #{simpleCondition.searchWord}) > 0
					</otherwise>
				</choose>
			</if>
		</where>
	</sql>



	<select id="selectTotalRecord" resultType="long" parameterType="PaginationInfo">
		SELECT COUNT(*)
		FROM FREE_BOARD
		<include refid="searchFrag"></include>
	</select>


	<select id="selectFreeBoardList" resultType="FreeBoardVO" parameterType="PaginationInfo">
		SELECT B.*
		FROM (
		SELECT ROWNUM RNUM, A.*
		FROM(
		
		SELECT
		BOARD_NO, BOARD_TITLE, BOARD_WRTR, BOARD_REGIDATE, EMP_NO, BOARD_READCOUNT
		FROM FREE_BOARD
		
		
		<include refid="searchFrag" />
		ORDER BY BOARD_NO DESC
		) A
		) B
         <![CDATA[
         WHERE RNUM >= #{startRow} AND RNUM <= #{endRow}
         ]]>
	</select>



	<resultMap type="FreeBoardVO" id="boardMap"
		autoMapping="true">
		<id property="boardNo" column="BOARD_NO" />
		<association property="fileGroup" javaType="AtchFileVO">
			<id property="atchFileId" column="ATCH_FILE_ID" />	<!-- 2두개 수동바인딩 -->
			<collection property="detailList" ofType="AtchFileDtlVO"
				autoMapping="true">
				<id property="atchFileId" column="ATCH_FILE_ID" />
				<id property="fileSn" column="FILE_SN" />
			</collection>
		</association><!-- has a 관계 : assosiation -->
	</resultMap>

	<select id="selectFreeBoard" parameterType="String" resultMap="boardMap">
		WITH ATCH_FILE_VIEW AS( 
        SELECT *
        FROM ATCH_FILE INNER JOIN ATCH_FILE_DTL
        USING(ATCH_FILE_ID)
        )
        SELECT
         BOARD_NO, BOARD_WRTR, BOARD_TITLE, BOARD_CONTENT,
         BOARD_REGIDATE, BOARD_READCOUNT, BOARD_ATCHNUM, EMP_NO
         , A.BOARD_ATCHNUM
         , B.ATCH_FILE_ID AFSN
         , FILE_STRE_COURS ,STRE_FILE_NM , ORIGNL_FILE_NM
         , FILE_CN , FILE_SIZE , FILE_EXTSN , FILE_REGIDATE , FILE_MIME
       
         FROM FREE_BOARD A LEFT OUTER JOIN ATCH_FILE_VIEW B ON (A.BOARD_ATCHNUM = B.ATCH_FILE_ID)
		 WHERE A.BOARD_NO = #{boardNo}
	</select>

	 <insert id="insertFreeBoard" parameterType="FreeBoardVO">
      <selectKey order="BEFORE" resultType="int" keyProperty="boardNo">
         SELECT FREE_NO_SEQ.NEXTVAL FROM DUAL
      </selectKey>
      INSERT INTO FREE_BOARD (
           BOARD_NO
          ,BOARD_WRTR
          ,BOARD_TITLE
          ,BOARD_CONTENT
          ,BOARD_REGIDATE
          ,BOARD_READCOUNT
          ,BOARD_ATCHNUM
          ,EMP_NO
      ) VALUES (
          #{boardNo,jdbcType=VARCHAR}
		, #{boardWrtr,jdbcType=VARCHAR}
		, #{boardTitle,jdbcType=VARCHAR}
		, #{boardContent,jdbcType=CLOB}
		, CURRENT_TIMESTAMP
		, #{boardReadcount,jdbcType=NUMERIC}
		, #{boardAtchnum,jdbcType=VARCHAR}
		, #{empNo,jdbcType=VARCHAR}
      )
   </insert>

	<delete id="deleteFreeBoard" parameterType="FreeBoardVO">
		DELETE FROM FREE_BOARD
		WHERE BOARD_NO = #{boardNo}
		<!-- AND EMP_NO = #{empNo} -->
	</delete>


	<update id="updateFreeBoard" parameterType="FreeBoardVO">
		UPDATE FREE_BOARD
		SET
		BOARD_CONTENT = #{boardContent,jdbcType=CLOB}
		WHERE BOARD_NO = #{boardNo}
	</update>
	
	
	<update id="updateFreeBoardReadcount" parameterType="FreeBoardVO">
	UPDATE free_board
	SET
    board_readcount =  board_readcount+1
	WHERE board_no =  #{boardNo}
	
	</update>

</mapper>