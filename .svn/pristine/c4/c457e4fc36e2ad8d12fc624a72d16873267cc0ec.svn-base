<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.or.ddit.employee.dao.EmployeeDao">

	<select id="selectDeptList"
		resultType="kr.or.ddit.employee.vo.DepartmentVO">
		SELECT DEPT_NM
		FROM DEPARTMENT
	</select>

	<select id="selectDeptTreeList"
		resultType="kr.or.ddit.employee.vo.EmployeeVO" parameterType="string">
		SELECT
		EMP_NO,
		DEPT_NM "dept.deptNm",
		CASE
		WHEN SUBSTR(EMP_NO, 1, 1) = 'N' AND NOT SUBSTR(EMP_NO, 2, 1) = 'N' THEN
		EMP_NM || ' (간호사)'
		ELSE EMP_NM
		END AS EMP_NM,
		EMP_TELNO
		FROM DEPARTMENT INNER JOIN EMPLOYEE ON (DEPARTMENT.DEPT_CODE =
		EMPLOYEE.DEPT_CODE)
		<where>
			<choose>
				<when test='empNo.substring(1,1) eq "N".toString()'>
					AND (SUBSTR(EMP_NO, 1 ,1) = 'N') AND (SUBSTR(EMP_NO, 2, 2) =
					#{deptCode})
				</when>
				<when test='empNo.startsWith("D")'>
					AND (SUBSTR(EMP_NO, 1 ,1) = 'D') AND (SUBSTR(EMP_NO, 2, 2) =
					#{deptCode})
				</when>
				<otherwise>
					AND SUBSTR(EMP_NO, 2 ,2) = #{deptCode}
				</otherwise>
			</choose>
		</where>
	</select>

	
	<resultMap type="EmployeeVO" id="empMap" autoMapping="true">
	 <id property="empNo" column="EMP_NO" />
	 	<association property="dept" javaType="DepartmentVO" autoMapping="true" />
	 	<association property="doctrList" javaType="DoctorDtlVO" autoMapping="true"/>
	 	<association property="nurseList" javaType="NurseDtlVO" autoMapping="true" />
	 	<association property="techList" javaType="TechnicianVO" autoMapping="true"/>
	</resultMap>
	<select id="selectEmployee" parameterType="string" resultMap="empMap">
		SELECT
		    EMP.EMP_NO, EMP.EMP_NM, EMP.EMP_PW, EMP.EMP_IDENTINO, EMP.EMP_TELNO, EMP.EMP_EMAIL, EMP.EMP_ZIPCODE,
		    EMP.EMP_ADDR1, EMP.EMP_ADDR2, EMP.JNCMP_YMD, EMP.DEPT_CODE, DEPT.DEPT_NM,
			<if test="empNo neq null and empNo.length gt 0">
				<choose>
		        <when test="empNo.startsWith('D')">
		            DDTL.DOCTR_NUM
				FROM EMPLOYEE EMP
					INNER JOIN DEPARTMENT DEPT ON EMP.DEPT_CODE = DEPT.DEPT_CODE
					LEFT OUTER JOIN DOCTOR_DTL DDTL ON EMP.EMP_NO = DDTL.DOC_EMP_NO
		        </when>
		        <when test="empNo.startsWith('N')">
		            NDTL.NURS_NUM
				FROM EMPLOYEE EMP
					INNER JOIN DEPARTMENT DEPT ON EMP.DEPT_CODE = DEPT.DEPT_CODE
					LEFT OUTER JOIN NURSE_DTL NDTL ON EMP.EMP_NO = NDTL.EMP_NO
		        </when>
		        <when test="empNo.startsWith('T')">
		            TDTL.TECH_NUM
				FROM EMPLOYEE EMP
					INNER JOIN DEPARTMENT DEPT ON EMP.DEPT_CODE = DEPT.DEPT_CODE
					LEFT OUTER JOIN TECHNICIAN TDTL ON EMP.EMP_NO = TDTL.TEC_EMP_NO
		        </when>
		        </choose>
			</if>
		WHERE EMP.EMP_NO = #{empNo}
	</select>
	
	<update id="updateEmployee" parameterType="EmployeeVO">
		UPDATE EMPLOYEE SET
			 EMP_TELNO =#{empTelno, jdbcType=VARCHAR}
			, EMP_EMAIL =#{empEmail, jdbcType=VARCHAR}
			, EMP_ADDR1 =#{empAddr1, jdbcType=VARCHAR}
			, EMP_ADDR2 =#{empAddr2, jdbcType=VARCHAR}
			, EMP_ZIPCODE =#{empZipcode, jdbcType=VARCHAR}
		WHERE EMP_NO = #{empNo}
	</update>
</mapper>