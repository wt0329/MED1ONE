package kr.or.ddit.medical.hospital.controller;

import java.util.List;

import javax.inject.Inject;

import org.springframework.http.MediaType;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import kr.or.ddit.medical.hospital.service.HospitalService;
import kr.or.ddit.medical.hospital.vo.DietRcdrVO;
import kr.or.ddit.medical.hospital.vo.HospitalizationVO;
import kr.or.ddit.medical.hospital.vo.SckbdVO;
import kr.or.ddit.medical.hospital.vo.VitalVO;

@Controller
@RequestMapping("/hospital/")
public class HospitalInsertController {
	
	@Inject
	private HospitalService service;
	
//	@ModelAttribute("vital")
//	public VitalVO vital() {
//		return new VitalVO();
//	}
//	
	// 병동 - 환자관리 투약 입력
	@PostMapping("medicineInsert.do")
	public String medicineInsert(
		DietRcdrVO diet
		, Model model
	) {
		
		boolean dietRC =service.createDietRecord(diet);
		model.addAttribute("diet", diet);
		if(dietRC) {
			return "nurse/nurseHospitalization";
		}else {
			return "/";
		}
	}
	
	// 병동-환자관리 식이 입력
	@PostMapping("dietInsert.do")
	public String dietInsert(
			DietRcdrVO diet
			, Model model
	) {
			
			boolean dietRC =service.createDietRecord(diet);
			model.addAttribute("diet", diet);
			if(dietRC) {
				return "nurse/nurseHospitalization";
			}else {
				return "/";
			}
	}
	
	//병동 - 환자관리 식이기록 출력
	@GetMapping(value="dietList.do", produces = MediaType.APPLICATION_JSON_VALUE)
	@ResponseBody
	public List<DietRcdrVO> dietRC(@RequestParam("hsptlzCode") String hsptlzCode) {
		List<DietRcdrVO> dietDtl = service.retrieveDietDtl(hsptlzCode);
		return dietDtl;
	}
	
	//병동 - 환자관리 바이탈 출력
	@GetMapping(value="vitalList.do", produces = MediaType.APPLICATION_JSON_VALUE)
	@ResponseBody
	public List<VitalVO> vitalRC(@RequestParam("hsptlzCode") String hsptlzCode) {
		List<VitalVO> vitalDtl = service.retrieveVitalDtl(hsptlzCode);
		return vitalDtl;
	}
	
	// 병동-환자관리 바이탈 입력
	@PostMapping("vitalInsert.do")
	public String vitalView(
		VitalVO vital
		, Model model
	){
		
		boolean vitalRC = service.createVital(vital);
		model.addAttribute("vital", vital);
		if(vitalRC) {
			return "nurse/nurseHospitalization";
		}else {
			return "/";
		}

	}
	
	// 병동-환자관리 IO 입력
	@GetMapping("IOInsert.do")
	public String IOInsert() {
		return "hospital/hospitalization";
	}
	
	//입원대기 환자 입원처리(병동, 병실 배정)
	@GetMapping(value="hsplzIn.do", produces = MediaType.APPLICATION_JSON_VALUE)
	@ResponseBody
	public boolean hsptlzIn(
		@RequestParam("recCode") String recCode
		, @RequestParam("hsptlzTotal") int hsptlzTotal
		, @RequestParam("docEmpNo") String docEmpNo
		, @RequestParam("patntCode") String patntCode
		, @RequestParam("sckbdNo") int sckbdNo
		, @RequestParam("sckbdRo") String sckbdRo
		, @RequestParam("hspodCode") String hspodCode
	) {
		HospitalizationVO hsptlz = new HospitalizationVO();
		hsptlz.setRecCode(recCode);
		hsptlz.setHsptlzTotal(hsptlzTotal);
		hsptlz.setSckbdNo(sckbdNo);
		hsptlz.setSckbdRo(sckbdRo);
		hsptlz.setDocEmpNo(docEmpNo);
		hsptlz.setPatntCode(patntCode);
		hsptlz.setHspodCode(hspodCode);
		
		SckbdVO sckbd = new SckbdVO();
		sckbd.setSckbdNo(sckbdNo);
		sckbd.setSckbdRo(sckbdRo);
		
		boolean hspIn = service.createHsptlzIn(hsptlz);
		boolean patntStat = service.createHspPatnt(recCode);
		boolean sckbdStat = service.modifySckBD(sckbd);
		
		return (hspIn==true) && (patntStat==true) && (sckbdStat==true);
		
	}
}
