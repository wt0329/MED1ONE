package kr.or.ddit.Free.controller;

import java.util.List;

import javax.inject.Inject;

import org.springframework.security.core.Authentication;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;

import kr.or.ddit.Free.service.CommentService;
import kr.or.ddit.Free.service.FreeService;
import kr.or.ddit.Free.vo.CommentVO;
import kr.or.ddit.Free.vo.FreeBoardVO;
import kr.or.ddit.employee.service.EmployeeService;
import kr.or.ddit.employee.vo.EmployeeVO;
import kr.or.ddit.employee.vo.EmployeeVOWrapper;
import kr.or.ddit.employee.vo.PaginationInfo;
import kr.or.ddit.employee.vo.SimpleCondition;
import lombok.RequiredArgsConstructor;


@Controller
@RequestMapping("/free/")
public class FreeRetrieveController {

	@Inject
	private FreeService service;
	@Inject
	private CommentService cmtService;
	@Inject
	private EmployeeService empService;


	@RequestMapping("freeList.do")
	public void boardList(
			@RequestParam(name = "page", required = false, defaultValue = "1") long currentPage,
			@ModelAttribute("simpleCondition") SimpleCondition simpleCondition, 
			Model model
			) {

		PaginationInfo<FreeBoardVO> paging = new PaginationInfo<>(8, 5);
		paging.setCurrentPage(currentPage);

		paging.setSimpleCondition(simpleCondition);

		List<FreeBoardVO> freeBoardList = service.retrieveFreeBoardList(paging);
		paging.setDataList(freeBoardList);

		model.addAttribute("paging", paging);
	}

	
	@RequestMapping("freeView.do")
	public void boardView(@RequestParam(name = "what") String boardNo,
			@RequestParam(name = "page", required = false, defaultValue = "1") long currentPage
			, @ModelAttribute("simpleCondition") SimpleCondition simpleCondition
			, Authentication authentication
			, Model model
			
			
		) {
		EmployeeVOWrapper wrapper = (EmployeeVOWrapper)authentication.getPrincipal();
		EmployeeVO loginUser = empService.retrieveEmployee(wrapper.getRealUser().getEmpNo());
		model.addAttribute("emp", loginUser);
		
		
		service.modifyFreeBoardReadcount(boardNo);

		PaginationInfo<CommentVO> cmtPaging = new PaginationInfo<>(5, 3);
		cmtPaging.setCurrentPage(currentPage);
		cmtPaging.setSimpleCondition(simpleCondition);
		cmtPaging.setboardNo(boardNo);
		
		List<CommentVO> cmtList = cmtService.retrieveFreeCommentList(cmtPaging);
		cmtPaging.setDataList(cmtList); //댓글리스트
		
		FreeBoardVO freeBoard = service.retrieveFreeBoard(boardNo);
		long totalRecord = cmtService.retrieveBoardRecord(boardNo);
		
		model.addAttribute("freeBoard", freeBoard);
		model.addAttribute("cmtPaging", cmtPaging);
		model.addAttribute("totalRecord", totalRecord);

	}
}
