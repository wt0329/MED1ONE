<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.or.ddit.rez.dao.RezDAO">



	<!--전체예약조회 -->
	<select id="selectAllRez" resultType="ReservationVO">
		SELECT
		R.RESVE_NUM,
		R.RESVE_DATE,
		SUBSTR(R.RESVE_DATE, 1, 4) || '-' ||
		SUBSTR(R.RESVE_DATE, 5, 2) || '-' ||
		SUBSTR(R.RESVE_DATE, 7, 2) AS CONVERTDATE,
		R.RESVE_TIME,
		R.RESVE_ENDTIME,
		R.RESVE_REGIST,
		R.PATNT_CODE,
		R.PATNT_NM,
		R.FCLTY_CODE,
		F.FCLTY_NM,
		D.DOC_EMP_NO,
		D.DOC_EMP_NM,
		CASE
		WHEN SUBSTR(P.PATNT_IDENTINO, 1, 1) IN ('0', '1', '2') THEN
		'20' || SUBSTR(P.PATNT_IDENTINO, 1, 2) || '-' || SUBSTR(P.PATNT_IDENTINO,
		3, 2) || '-' || SUBSTR(P.PATNT_IDENTINO, 5, 2)
		ELSE
		'19' || SUBSTR(P.PATNT_IDENTINO, 1, 2) || '-' || SUBSTR(P.PATNT_IDENTINO,
		3, 2) || '-' || SUBSTR(P.PATNT_IDENTINO, 5, 2)
		END AS BIRTH,
		SUBSTR(P.PATNT_TELNO,1, 3)||'-'||SUBSTR(P.PATNT_TELNO,4, 4)||'-'||SUBSTR(P.PATNT_TELNO,8, 4) AS PATNT_TELNO
		FROM
		RESERVATION R JOIN FCLTY_INFO F ON ( R.FCLTY_CODE = F.FCLTY_CODE)
		JOIN PATIENT P ON (R.PATNT_CODE=P.PATNT_CODE)
		LEFT OUTER JOIN DOCTOR_DTL D ON(R.FCLTY_CODE = D.FCLTY_CODE)
	</select>



	<!--진료실 전체예약조회 -->
	<select id="selectClinicAllRez" resultType="ReservationVO">
		SELECT
		R.RESVE_NUM,
		R.RESVE_DATE,
		SUBSTR(R.RESVE_DATE, 1, 4) || '-' ||
		SUBSTR(R.RESVE_DATE, 5, 2) || '-' ||
		SUBSTR(R.RESVE_DATE, 7, 2) AS CONVERTDATE,
		R.RESVE_TIME,
		R.RESVE_ENDTIME,
		R.RESVE_REGIST,
		R.PATNT_CODE,
		R.PATNT_NM,
		R.FCLTY_CODE,
		F.FCLTY_NM,
		D.DOC_EMP_NO,
		D.DOC_EMP_NM,
		CASE
		WHEN SUBSTR(P.PATNT_IDENTINO, 1, 1) IN ('0', '1', '2') THEN
		'20' || SUBSTR(P.PATNT_IDENTINO, 1, 2) || '-' || SUBSTR(P.PATNT_IDENTINO,
		3, 2) || '-' || SUBSTR(P.PATNT_IDENTINO, 5, 2)
		ELSE
		'19' || SUBSTR(P.PATNT_IDENTINO, 1, 2) || '-' || SUBSTR(P.PATNT_IDENTINO,
		3, 2) || '-' || SUBSTR(P.PATNT_IDENTINO, 5, 2)
		END AS BIRTH,
		SUBSTR(P.PATNT_TELNO,1, 3)||'-'||SUBSTR(P.PATNT_TELNO,4, 4)||'-'||SUBSTR(P.PATNT_TELNO,8, 4) AS PATNT_TELNO
		FROM
		RESERVATION R JOIN FCLTY_INFO F ON ( R.FCLTY_CODE = F.FCLTY_CODE)
		JOIN PATIENT P ON (R.PATNT_CODE=P.PATNT_CODE)
		LEFT OUTER JOIN DOCTOR_DTL D ON(R.FCLTY_CODE = D.FCLTY_CODE)
		WHERE F.FCLTY_CODE NOT IN ('K', 'L', 'O', 'M', 'N', 'H')
	</select>





	<!--검사실 전체예약조회 -->
	<select id="selectExamAllRez" resultType="ReservationVO">
		SELECT
		R.RESVE_NUM,
		R.RESVE_DATE,
		SUBSTR(R.RESVE_DATE, 1, 4) || '-' ||
		SUBSTR(R.RESVE_DATE, 5, 2) || '-' ||
		SUBSTR(R.RESVE_DATE, 7, 2) AS CONVERTDATE,
		R.RESVE_TIME,
		R.RESVE_ENDTIME,
		R.RESVE_REGIST,
		R.PATNT_CODE,
		R.PATNT_NM,
		R.FCLTY_CODE,
		F.FCLTY_NM,
		D.DOC_EMP_NO,
		D.DOC_EMP_NM,
		CASE
		WHEN SUBSTR(P.PATNT_IDENTINO, 1, 1) IN ('0', '1', '2') THEN
		'20' || SUBSTR(P.PATNT_IDENTINO, 1, 2) || '-' || SUBSTR(P.PATNT_IDENTINO,
		3, 2) || '-' || SUBSTR(P.PATNT_IDENTINO, 5, 2)
		ELSE
		'19' || SUBSTR(P.PATNT_IDENTINO, 1, 2) || '-' || SUBSTR(P.PATNT_IDENTINO,
		3, 2) || '-' || SUBSTR(P.PATNT_IDENTINO, 5, 2)
		END AS BIRTH,
		SUBSTR(P.PATNT_TELNO,1, 3)||'-'||SUBSTR(P.PATNT_TELNO,4, 4)||'-'||SUBSTR(P.PATNT_TELNO,8, 4) AS PATNT_TELNO
		FROM
		RESERVATION R JOIN FCLTY_INFO F ON ( R.FCLTY_CODE = F.FCLTY_CODE)
		JOIN PATIENT P ON (R.PATNT_CODE=P.PATNT_CODE)
		LEFT OUTER JOIN DOCTOR_DTL D ON(R.FCLTY_CODE = D.FCLTY_CODE)
		WHERE
		R.FCLTY_CODE NOT IN ('A', 'B', 'F', 'D', 'E', 'C', 'G')
	</select>




	<!--날짜로 진료실 예약조회 -->
	<select id="selectClinicTimeTable" resultType="ReservationVO">
		SELECT
		sub.RESVE_NUM,
		sub.RESVE_DATE,
		sub.CONVERTDATE,
		sub.RESVE_TIME,
		sub.RESVE_ENDTIME,
		sub.RESVE_REGIST,
		sub.PATNT_CODE,
		sub.PATNT_NM,
		sub.FCLTY_CODE,
		sub.FCLTY_NM,
		sub.DOC_EMP_NO,
		sub.DOC_EMP_NM,
		sub.BIRTH,
		sub.PATNT_TELNO
		FROM (
		SELECT
		R.RESVE_NUM,
		R.RESVE_DATE,
		SUBSTR(R.RESVE_DATE, 1, 4) || '-' ||
		SUBSTR(R.RESVE_DATE, 5, 2) || '-' ||
		SUBSTR(R.RESVE_DATE, 7, 2) AS CONVERTDATE,
		R.RESVE_TIME,
		R.RESVE_ENDTIME,
		R.RESVE_REGIST,
		R.PATNT_CODE,
		R.PATNT_NM,
		R.FCLTY_CODE,
		F.FCLTY_NM,
		D.DOC_EMP_NO,
		D.DOC_EMP_NM,
		CASE
		WHEN SUBSTR(P.PATNT_IDENTINO, 1, 1) IN ('0', '1', '2') THEN
		'20' || SUBSTR(P.PATNT_IDENTINO, 1, 2) || '-' || SUBSTR(P.PATNT_IDENTINO,
		3, 2) || '-' || SUBSTR(P.PATNT_IDENTINO, 5, 2)
		ELSE
		'19' || SUBSTR(P.PATNT_IDENTINO, 1, 2) || '-' || SUBSTR(P.PATNT_IDENTINO,
		3, 2) || '-' || SUBSTR(P.PATNT_IDENTINO, 5, 2)
		END AS BIRTH,
		SUBSTR(P.PATNT_TELNO,1, 3)||'-'||SUBSTR(P.PATNT_TELNO,4, 4)||'-'||SUBSTR(P.PATNT_TELNO,8, 4) AS PATNT_TELNO,
		ROW_NUMBER() OVER(PARTITION BY R.RESVE_DATE, R.RESVE_TIME, R.PATNT_CODE ORDER BY
		R.RESVE_NUM) AS row_num
		FROM
		RESERVATION R
		JOIN FCLTY_INFO F ON R.FCLTY_CODE = F.FCLTY_CODE
		JOIN PATIENT P ON R.PATNT_CODE = P.PATNT_CODE
		LEFT OUTER JOIN DOCTOR_DTL D ON R.FCLTY_CODE = D.FCLTY_CODE
		WHERE
		F.FCLTY_CODE NOT IN ('K', 'L', 'O', 'M', 'N', 'H')
		AND R.RESVE_DATE = #{resveDate}
		) sub
		WHERE sub.row_num = 1
	</select>





	<!--날짜로 검사실 예약조회 -->
	<select id="selectExamTimeTable" resultType="ReservationVO">
		SELECT
		sub.RESVE_NUM,
		sub.RESVE_DATE,
		sub.RESVE_TIME,
		sub.RESVE_ENDTIME,
		sub.RESVE_REGIST,
		sub.PATNT_CODE,
		sub.PATNT_NM,
		sub.FCLTY_CODE,
		sub.FCLTY_NM,
		sub.DOC_EMP_NO,
		sub.DOC_EMP_NM,
		sub.BIRTH,
		sub.PATNT_TELNO
		FROM (
		SELECT
		R.RESVE_NUM,
		R.RESVE_DATE,
		R.RESVE_TIME,
		R.RESVE_ENDTIME,
		R.RESVE_REGIST,
		R.PATNT_CODE,
		R.PATNT_NM,
		R.FCLTY_CODE,
		F.FCLTY_NM,
		D.DOC_EMP_NO,
		D.DOC_EMP_NM,
		CASE
		WHEN SUBSTR(P.PATNT_IDENTINO, 1, 1) IN ('0', '1', '2') THEN
		'20' || SUBSTR(P.PATNT_IDENTINO, 1, 2) || '-' || SUBSTR(P.PATNT_IDENTINO,
		3, 2) || '-' || SUBSTR(P.PATNT_IDENTINO, 5, 2)
		ELSE
		'19' || SUBSTR(P.PATNT_IDENTINO, 1, 2) || '-' || SUBSTR(P.PATNT_IDENTINO,
		3, 2) || '-' || SUBSTR(P.PATNT_IDENTINO, 5, 2)
		END AS BIRTH,
		SUBSTR(P.PATNT_TELNO,1, 3)||'-'||SUBSTR(P.PATNT_TELNO,4, 4)||'-'||SUBSTR(P.PATNT_TELNO,8, 4) AS PATNT_TELNO,
		ROW_NUMBER() OVER(PARTITION BY R.RESVE_DATE, R.RESVE_TIME ORDER BY R.PATNT_CODE,
		R.RESVE_NUM) AS row_num
		FROM
		RESERVATION R
		JOIN FCLTY_INFO F ON R.FCLTY_CODE = F.FCLTY_CODE
		JOIN PATIENT P ON R.PATNT_CODE = P.PATNT_CODE
		LEFT OUTER JOIN DOCTOR_DTL D ON R.FCLTY_CODE = D.FCLTY_CODE
		WHERE
		R.FCLTY_CODE NOT IN ('A', 'B', 'F', 'D', 'E', 'C', 'G')
		AND R.RESVE_DATE = #{resveDate}
		) sub
		WHERE sub.row_num = 1
	</select>









	<!--시설코드로 전체예약조회 -->
	<select id="selectFcltyRez" parameterType="String"
		resultType="ReservationVO">
		SELECT
		R.RESVE_NUM,
		R.RESVE_DATE,
		R.RESVE_TIME,
		R.RESVE_ENDTIME,
		R.RESVE_REGIST,
		R.PATNT_CODE,
		R.PATNT_NM,
		R.FCLTY_CODE,
		F.FCLTY_NM,
		D.DOC_EMP_NO,
		D.DOC_EMP_NM,
		CASE
		WHEN SUBSTR(P.PATNT_IDENTINO, 1, 1) IN ('0', '1', '2') THEN
		'20' || SUBSTR(P.PATNT_IDENTINO, 1, 2) || '-' || SUBSTR(P.PATNT_IDENTINO,
		3, 2) || '-' || SUBSTR(P.PATNT_IDENTINO, 5, 2)
		ELSE
		'19' || SUBSTR(P.PATNT_IDENTINO, 1, 2) || '-' || SUBSTR(P.PATNT_IDENTINO,
		3, 2) || '-' || SUBSTR(P.PATNT_IDENTINO, 5, 2)
		END AS BIRTH,
		SUBSTR(P.PATNT_TELNO,1, 3)||'-'||SUBSTR(P.PATNT_TELNO,4, 4)||'-'||SUBSTR(P.PATNT_TELNO,8, 4) AS PATNT_TELNO
		FROM
		RESERVATION R JOIN FCLTY_INFO F ON ( R.FCLTY_CODE = F.FCLTY_CODE)
		JOIN PATIENT P ON (R.PATNT_CODE=P.PATNT_CODE)
		LEFT OUTER JOIN DOCTOR_DTL D ON(R.FCLTY_CODE = D.FCLTY_CODE)
		WHERE F.FCLTY_CODE=#{fcltyCode}
	</select>



	<!--환자코드로 상세조회 -->
	<select id="selectPatientRez" parameterType="String" resultType="ReservationVO">
		SELECT
		R.RESVE_NUM,
		R.RESVE_DATE,
		R.RESVE_TIME,
		R.RESVE_ENDTIME,
		R.RESVE_REGIST,
		R.PATNT_CODE,
		R.PATNT_NM,
		R.FCLTY_CODE,
		F.FCLTY_NM,
		SUBSTR(P.PATNT_IDENTINO,1, 8)||'******' AS BIRTHCODE,
		D.DOC_EMP_NO,
		D.DOC_EMP_NM,
		CASE
		WHEN SUBSTR(P.PATNT_IDENTINO, 1, 1) IN ('0', '1', '2') THEN
		'20' || SUBSTR(P.PATNT_IDENTINO, 1, 2) || '-' || SUBSTR(P.PATNT_IDENTINO,
		3, 2) || '-' || SUBSTR(P.PATNT_IDENTINO, 5, 2)
		ELSE
		'19' || SUBSTR(P.PATNT_IDENTINO, 1, 2) || '-' || SUBSTR(P.PATNT_IDENTINO,
		3, 2) || '-' || SUBSTR(P.PATNT_IDENTINO, 5, 2)
		END AS BIRTH,
		SUBSTR(REGEXP_REPLACE(P.PATNT_IDENTINO, '[^0-9]', ''), 1, 7) AS BIRTHCODE,
		SUBSTR(P.PATNT_TELNO,1, 3)||'-'||SUBSTR(P.PATNT_TELNO,4, 4)||'-'||SUBSTR(P.PATNT_TELNO,8, 4) AS patntTelno,
		P.PATNT_ADDR1,
		P.PATNT_ADDR2,
		P.PATNT_ZIPCODE,
		P.HEIGHT,
		P.WEIGHT,
		CASE
		WHEN P.GEN = 'M' THEN '남'
		WHEN P.GEN = 'F' THEN '여'
		ELSE P.GEN
		END AS GEN,
		P.PATNT_REGIST,
		SUBSTR(R.RESVE_DATE, 1, 4) || '-' || SUBSTR(R.RESVE_DATE, 5, 2)||'-'||SUBSTR(R.RESVE_DATE,
		7, 2) AS FRESVEDATE,
		'20' || SUBSTR(P.PATNT_REGIST, 1, 2) || '-' || SUBSTR(P.PATNT_REGIST, 4,
		2)||'-'||SUBSTR(P.PATNT_REGIST, 7, 2) AS FPATNTREGIST,
		P.PATNT_UPDATE,
		P.MDEXMN_YN,
		'만 '||
    	CASE WHEN SUBSTR(P.PATNT_IDENTINO, 8, 1) IN ('1', '2')
    	THEN EXTRACT(YEAR FROM SYSDATE) - EXTRACT(YEAR FROM TO_DATE('19' || SUBSTR(P.PATNT_IDENTINO, 1, 2), 'YYYY')) || '세'
    	WHEN SUBSTR(P.PATNT_IDENTINO, 8, 1) IN ('3', '4')
    	THEN EXTRACT(YEAR FROM SYSDATE) - EXTRACT(YEAR FROM TO_DATE('20' || SUBSTR(P.PATNT_IDENTINO, 1, 2), 'YYYY')) || '세'
 		END AS AGE,
		P.PAT_EMAIL
		FROM
		RESERVATION R JOIN FCLTY_INFO F ON ( R.FCLTY_CODE = F.FCLTY_CODE)
		JOIN PATIENT P ON (R.PATNT_CODE=P.PATNT_CODE)
		LEFT OUTER JOIN DOCTOR_DTL D ON(R.FCLTY_CODE = D.FCLTY_CODE)
		WHERE R.PATNT_CODE=#{patntCode}
		ORDER BY R.RESVE_DATE DESC
	</select>



	<!--날짜와 시설코드로 전체 예약시간 조회 -->
	<select id="selectTimeRez" parameterType="String"
		resultType="ReservationVO">
		SELECT
		R.RESVE_NUM,
		R.RESVE_DATE,
		R.RESVE_TIME,
		R.RESVE_ENDTIME,
		R.PATNT_CODE,
		R.PATNT_NM,
		R.FCLTY_CODE,
		F.FCLTY_NM,
		D.DOC_EMP_NO,
		D.DOC_EMP_NM,
		CASE
		WHEN SUBSTR(P.PATNT_IDENTINO, 1, 1) IN ('0', '1', '2') THEN
		'20' || SUBSTR(P.PATNT_IDENTINO, 1, 2) || '-' || SUBSTR(P.PATNT_IDENTINO,
		3, 2) || '-' || SUBSTR(P.PATNT_IDENTINO, 5, 2)
		ELSE
		'19' || SUBSTR(P.PATNT_IDENTINO, 1, 2) || '-' || SUBSTR(P.PATNT_IDENTINO,
		3, 2) || '-' || SUBSTR(P.PATNT_IDENTINO, 5, 2)
		END AS BIRTH,,
		SUBSTR(P.PATNT_TELNO,1, 3)||'-'||SUBSTR(P.PATNT_TELNO,4, 4)||'-'||SUBSTR(P.PATNT_TELNO,8, 4) AS PATNT_TELNO
		FROM
		RESERVATION R JOIN FCLTY_INFO F ON ( R.FCLTY_CODE = F.FCLTY_CODE)
		JOIN PATIENT P ON (R.PATNT_CODE=P.PATNT_CODE)
		LEFT OUTER JOIN DOCTOR_DTL D ON(R.FCLTY_CODE = D.FCLTY_CODE)
		WHERE R.RESVE_DATE=#{resveDate}
		AND
		F.FCLTY_CODE=#{fcltyCode}
	</select>


	<!--선택한 날짜, 시간, 진료과 코드에 레코드가 1개 이상 존재하면 예약 불가 리턴 -->
	<select id="selectUpdateRezConfirm" resultType="int">
		SELECT COUNT(*)
		FROM
		RESERVATION R JOIN FCLTY_INFO F ON ( R.FCLTY_CODE = F.FCLTY_CODE)
		JOIN PATIENT P ON (R.PATNT_CODE=P.PATNT_CODE)
		LEFT OUTER JOIN DOCTOR_DTL D ON(R.FCLTY_CODE = D.FCLTY_CODE)
        WHERE R.RESVE_DATE = #{resveDate}
        AND R.RESVE_TIME = #{resveTime}
        AND F.FCLTY_CODE = #{fcltyCode}
	</select>
	
	
	
	<!--선택한 날짜, 시간, 진료과 코드에 동일한 이름의 레코드가 1개 이상 존재하면 이미 예약된 정보 리턴 -->
	<select id="selectUpdateMyRezConfirm" resultType="int" parameterType="ReservationVO">
		SELECT COUNT(*)
		FROM
		RESERVATION R JOIN FCLTY_INFO F ON ( R.FCLTY_CODE = F.FCLTY_CODE)
		JOIN PATIENT P ON (R.PATNT_CODE=P.PATNT_CODE)
		LEFT OUTER JOIN DOCTOR_DTL D ON(R.FCLTY_CODE = D.FCLTY_CODE)
        WHERE R.RESVE_DATE = #{resveDate}
        AND R.RESVE_TIME = #{resveTime}
        AND F.FCLTY_CODE = #{fcltyCode}
        AND R.PATNT_CODE = #{patntCode}
	</select>
	
	
    <!--예약 수정 -->
	<update id="updateRez" parameterType="ReservationVO">
	
	UPDATE RESERVATION
	SET
	resve_num = #{resveNum,jdbcType=VARCHAR}
	, resve_date = #{resveDate,jdbcType=VARCHAR}
	, resve_time = #{resveTime,jdbcType=VARCHAR}
	, resve_endtime = #{resveEndtime,jdbcType=VARCHAR}
	, resve_regist = SYSDATE
	, fclty_code = #{fcltyCode,jdbcType=VARCHAR}
	WHERE RESVE_NUM = #{resveNum}
	</update>


    <!--예약 삭제 -->
	<delete id="deleteRez" parameterType="String">
	DELETE FROM RESERVATION
	WHERE RESVE_NUM = #{resveNum}
	</delete>


	<!--예약번호로 예약건 찾기 -->
	<select id="selectMyRez" resultType="ReservationVO" parameterType="String">
		SELECT *
		FROM
        WHERE RESVE_NUM = #{resveNum}
	</select>


</mapper>