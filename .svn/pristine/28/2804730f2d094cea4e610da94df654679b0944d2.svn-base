package kr.or.ddit.medical.hospital.controller;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.inject.Inject;

import org.springframework.http.MediaType;
import org.springframework.stereotype.Controller;
import org.springframework.stereotype.Service;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import kr.or.ddit.medical.clinc.vo.PresDocVO;
import kr.or.ddit.medical.hospital.service.HospitalService;
import kr.or.ddit.medical.hospital.vo.HospitalizationVO;
import kr.or.ddit.medical.hospital.vo.SckbdVO;
import kr.or.ddit.medical.vo.PatientVO;
import kr.or.ddit.medical.vo.PatntStatVO;
import lombok.RequiredArgsConstructor;

@Controller
@RequestMapping("/hospital/")
@RequiredArgsConstructor
public class HospitalRetrieveController {
	
	@Inject
	private final HospitalService service;
	
	// jsp 접근 메서드
	@GetMapping("hospitalPatientView.do")
	public String hospitalPatient(Model model) {
		List<HospitalizationVO> hospitalPatient = service.retrieveHospitalPatientList();
		model.addAttribute("hospitalPatient", hospitalPatient);
		return "hospital/hospitalization";
	}
	
	// 간호부 병동-입원환자리스트 조회
	@GetMapping("hospitalPatientList.do")
	@ResponseBody
	public String hospitalPatientList(Model model) {
		List<HospitalizationVO> hospitalPatient = service.retrieveHospitalPatientList();
		model.addAttribute("hospitalPatient", hospitalPatient);
		return "hospital/hospitalization";
	}
	
	// 간호부 병동-환자관리 ui출력용
	@GetMapping(value="hospitalInPatientList.do", produces = MediaType.APPLICATION_JSON_VALUE)
	public String hospitalPatientDetail() {
		return "nurse/nurseHospitalization";
	}
	
	// 병동 현황, 입원대기환자, 입원중 환자 전체 조회 ui 출력용
	@GetMapping("hospitalList.do")
	public String hospitaList() {
		return "hospital/ward";
	}
	
	//입원중인 환자 전체 list
	@GetMapping(value="ingPatntList.do", produces = MediaType.APPLICATION_JSON_VALUE)
	@ResponseBody
	public List<HospitalizationVO> ingPatnt(){
		List<HospitalizationVO> ingPatnt = service.retrieveHospitalPatientList();
		return ingPatnt;
	}
	
	// 병동 현황 list 담기
	@GetMapping(value="hospitalSearch.do", produces = MediaType.APPLICATION_JSON_VALUE)
	@ResponseBody
	public List<SckbdVO> hospitalSearch(
		@RequestParam("wardSelect") String sckbdRo
	) {
		List<SckbdVO> bedList = service.retrieveSckbdList(sckbdRo);
		return bedList;
	}
	
	//환자 검색조회(입원중, 입원대기)
	@GetMapping(value="hospitalPatntSearch.do", produces = MediaType.APPLICATION_JSON_VALUE)
	@ResponseBody
	public List<PatientVO> waitPatntSearch(
		@RequestParam("word") String word
		, @RequestParam("code") String code
	){
		List<PatientVO> waitPatnt = service.retrieveHospitalList(word, code);

		return waitPatnt;
	}
	
	//입원환자 상세조회
	@GetMapping(value="hospitalPatientDetail.do", produces = MediaType.APPLICATION_JSON_VALUE)
	@ResponseBody
	public List<HospitalizationVO> inPatntDetail(
		Model model
		, @RequestParam("who") String patntCode
	){
		List<HospitalizationVO> patnt = service.retrieveInPatnt(patntCode);
		model.addAttribute(patnt);
		
		return patnt;
	}
	
	//처방내역 조회
	@GetMapping(value="presList.do", produces = MediaType.APPLICATION_JSON_VALUE)
	@ResponseBody
	public List<PresDocVO> presList(
		@RequestParam("pres") String presCode
	){
		List<PresDocVO> pres = service.retrievePresList(presCode);
		return pres;
		
	}
	
}
