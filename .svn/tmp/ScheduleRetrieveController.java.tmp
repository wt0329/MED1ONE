package kr.or.ddit.medical.nurse.controller;

import java.util.List;
import java.util.stream.Collectors;

<<<<<<< .mine
import javax.inject.Inject;

import org.springframework.http.MediaType;
||||||| .r345065
=======
import org.springframework.http.MediaType;
>>>>>>> .r345197
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestMapping;
<<<<<<< .mine
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import com.fasterxml.jackson.databind.ObjectMapper;
||||||| .r345065
=======
import org.springframework.web.bind.annotation.ResponseBody;
>>>>>>> .r345197

import kr.or.ddit.medical.nurse.service.NurseService;
import kr.or.ddit.medical.nurse.vo.DoctorSchdulVO;
import kr.or.ddit.medical.nurse.vo.NurseSchdulVO;
import kr.or.ddit.medical.nurse.vo.wrapper.DoctorSchdulVOWrapper;
import kr.or.ddit.medical.nurse.vo.wrapper.FullcalenderEvent;
import lombok.RequiredArgsConstructor;

@Controller
@RequestMapping("/nurse/")
public class ScheduleRetrieveController {
	
	@Inject
	private NurseService service;

	// 근무일정 - 의사
	@GetMapping(value = "docScheduleList.do", produces = MediaType.TEXT_HTML_VALUE)
	public String docScheduleList() {	
		return "nurse/schedule";
	}
	
	@GetMapping(value = "docScheduleList.do", produces = MediaType.APPLICATION_JSON_VALUE)
	@ResponseBody
	public List<FullcalenderEvent> docScheduleListDataSource() {
		List<DoctorSchdulVO> doctorList = service.retrieveDoctorList();
		return doctorList.stream().map((d)->new DoctorSchdulVOWrapper(d)).collect(Collectors.toList());
	}
	
	// 근무일정 - 간호사
	@GetMapping("/nurScheduleList.do")
	@ResponseBody
	public String nurScheduleList(
		@RequestParam("code") String nurseCode,	Model model) {
		List<NurseSchdulVO> nurseList = service.retrieveNurseList(nurseCode);
		
		try {
			ObjectMapper objectMapper = new ObjectMapper();
			String jsonData = objectMapper.writeValueAsString(nurseList);
			return jsonData;
		} catch(Exception e) {
			e.printStackTrace();
			return null;
		}
		
		//model.addAttribute("nurseList", nurseList);
		//return "nurse/schedule";
	}
}