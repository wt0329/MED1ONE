<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.or.ddit.File.dao.AtchFileDAO">
	<select id="selectAtchFileDetail" parameterType="AtchFileDtlVO" resultType="AtchFileDtlVO">
		SELECT ATCH_FILE_ID
		, FILE_SN
		, FILE_STRE_COURS
		, STRE_FILE_NM 
		, ORIGNL_FILE_NM
		, FILE_CN
	    , FILE_SIZE
	    , FILE_EXTSN
	    , FILE_MIME
	    , FILE_REGIDATE
		FROM ATCH_FILE_DTL
		WHERE ATCH_FILE_ID = #{atchFileId} AND FILE_SN = #{fileSn}
	</select>
	

	
	<resultMap type="AtchFileVO" id="atchFileMap">
		<id property="atchFileId" column="A_ID"/>
		<result property="creatDt" column="CREAT_DT"/>
		<collection property="detailList" ofType="AtchFileDtlVO" autoMapping="true">
			<id property="atchFileId" column="B_ID"/>
			<id property="fileSn" column="FILE_SN"/>
		</collection>
	</resultMap>
	
	<select id="selectAtchFileGroup" parameterType="int" resultMap="atchFileMap">
		
SELECT A.ATCH_FILE_ID A_ID
			, B.ATCH_FILE_ID B_ID
			, FILE_SN
			, FILE_STRE_COURS
			, STRE_FILE_NM
			, ORIGNL_FILE_NM
			, FILE_CN
			, FILE_SIZE
			, FILE_EXTSN
			, FILE_REGIDATE
			, FILE_MIME
			, CREAT_DT
		FROM ATCH_FILE A LEFT OUTER JOIN ATCH_FILE_DTL B 
            ON (A.ATCH_FILE_ID = B.ATCH_FILE_ID)
		WHERE A.ATCH_FILE_ID = #{atchFileId}
	</select>
	
	
	<insert id="insertAtchFileGroup" parameterType="AtchFileVO">
		<selectKey order="BEFORE" resultType="int" keyProperty="atchFileId">
			SELECT ATCH_NO_SEQ.NEXTVAL
			FROM DUAL
		</selectKey>
			INSERT ALL
			INTO ATCH_FILE(ATCH_FILE_ID, CREAT_DT)
			VALUES(#{atchFileId}, SYSDATE)
		<foreach collection="detailList" item="atch" index="idx">
			INTO ATCH_FILE_DTL (
				ATCH_FILE_ID
				, FILE_SN
				, FILE_STRE_COURS
				, STRE_FILE_NM
				, ORIGNL_FILE_NM
				, FILE_EXTSN
				, FILE_CN
				, FILE_SIZE
				, FILE_MIME
				, FILE_REGIDATE
			) VALUES (
				   		 #{atchFileId,jdbcType=NUMERIC}
					, #{idx,jdbcType=NUMERIC}+1
					, #{atch.fileStreCours,jdbcType=VARCHAR}
					, #{atch.streFileNm,jdbcType=VARCHAR}
					, #{atch.orignlFileNm,jdbcType=VARCHAR}
					, #{atch.fileExtsn,jdbcType=VARCHAR}
					, #{atch.fileCn,jdbcType=CLOB}
					, #{atch.fileSize,jdbcType=NUMERIC}
					, #{atch.fileMime,jdbcType=VARCHAR}
				, SYSDATE
			)
		</foreach>
		SELECT * FROM DUAL
	</insert>
	
	<delete id="deleteAtchFileGroup" parameterType="int">
		DELETE FROM ATCH_FILE
		WHERE ATCH_FILE_ID = #{atchFileId}
	</delete>
	
	<delete id="deleteAtchFileDetails" parameterType="int">
		DELETE FROM ATCH_FILE_DTL
		WHERE ATCH_FILE_ID = #{atchFileId}
	</delete>
	
	<delete id="deleteAtchFileDetail" parameterType="AtchFileDtlVO">
		DELETE FROM ATCH_FILE_DTL
		WHERE ATCH_FILE_ID = #{atchFileId} AND FILE_SN = #{fileSn}
	</delete>
	
	<insert id="insertAtchFileDetails">
		<selectKey order="BEFORE" resultType="int" keyProperty="lastFileSN">
			SELECT NVL(MAX(FILE_SN), 0)+1
			FROM ATCH_FILE_DTL
			WHERE ATCH_FILE_ID = #{atchFileGroup.atchFileId}
		</selectKey>
		INSERT ALL
			<foreach collection="atchFileGroup.detailList" item="atch" index="idx">
				 INTO ATCH_FILE_DTL (
			    	ATCH_FILE_ID
					, FILE_SN
				    , FILE_STRE_COURS
				    , STRE_FILE_NM
				    , ORIGNL_FILE_NM
				    , FILE_EXTSN
				    , FILE_CN
				    , FILE_SIZE
				    , FILE_MIME
				    , FILE_REGIDATE
			) VALUES (
				  #{atchFileGroup.atchFileId,jdbcType=NUMERIC}
					, #{lastFileSN}+#{idx}
					, #{atch.fileStreCours,jdbcType=VARCHAR}
					, #{atch.streFileNm,jdbcType=VARCHAR}
					, #{atch.orignlFileNm,jdbcType=VARCHAR}
					, #{atch.fileExtsn,jdbcType=VARCHAR}
					, #{atch.fileCn,jdbcType=CLOB}
					, #{atch.fileSize,jdbcType=NUMERIC}
					, #{atch.fileMime,jdbcType=VARCHAR}
					, SYSDATE
				</foreach>
				SELECT * FROM DUAL
	</insert>

</mapper>